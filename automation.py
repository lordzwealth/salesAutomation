# -*- coding: utf-8 -*-
"""automation.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1NgdREfmxDZm3oOH8yV6yRCzaChfW4E0P

A local retail business, dealing with a variety of products, aims to streamline and automate its accounting procedures. The business operates two shifts per day with one worker on each shift. The primary goal is to create a Python project that assists in automating essential accounting tasks, including calculating total sales, worker salaries, profit, tips, and total tips for the day.
"""

# to call all other functions
def runAutomation():
    while True:
        print('\nSales Automation System')
        print('1. Calculate Total Sales')
        print("2. Calculate Worker's  Salary")
        print('3. Calculate Shift Tips')
        print('4. calculate Total Tips')
        print('5. Exit')

        choice = input('Enter your choice (1-5): ')
        if choice == '1':
            calcTotalSales()
        elif choice == '2':
            workerSalary()
        elif choice == '3':
            calcShiftTips()
        elif choice == '4':
            calcTotalTips()
        elif choice == '5':
            break
        else:
            print('Invalid choice. please enter a number between 1 and 5.')

"""

1. Calculate Total Sales for the Day: from sales data for morning and evening shifts, produce total sales for the day.

"""

# Function to Calculate the Total Sales for the day
def calcTotalSales():
  #totalSales = morningShiftSales + eveningShiftSales
  while True:
    try:
      morningShiftSales = float(input("Morning Shift Sales: $"))
      eveningShiftSales = float(input("Evening Shift Sales: $"))

      totalSales = morningShiftSales + eveningShiftSales
      print(f"Total Sales for the day: ${totalSales}")
      break
    except:
    # if user doesn't input the required data type
      print("Oops!  That was no valid number.  Try again...")
  #return totalSales

calcTotalSales()

"""2. Calculate Worker's Salary: given hourly rate and hours worked by a worker. retrieve the worker's salary."""

# Function to Calculate Worker's Salary
def workerSalary():
  while True:
    try:
      hourlyRate = float(input("Kindly input the Hourly Rate ($ per Hour): "))
      hoursWorked = int(input("Kindly input number of Hours Worked: "))

      salary = hourlyRate * hoursWorked
      print(f"Hourly Rate: ${hourlyRate}")
      print(f"Number of Hours Worked: {hoursWorked}")
      print(f"Worker's Salary: ${salary}")
      break
    except:
    # if user doesn't input the required data type
      print("Oops!  That was not a valid number.  Try again...")
  #return salary

workerSalary()

"""3. Calculate Profit: given a list of numbers representing total sales and total cost of items sold, find the profit.(or loss if negative)"""

# Function to Calculate Profit
def calcProfit(salesList, costList):
    # Ensure the sales and cost lists have the same length
    if len(salesList) != len(costList):
        raise ValueError("Sales and cost lists must have the same length.")

    # Calculate profit for each pair of sales and cost
    profits = [sales - cost for sales, cost in zip(salesList, costList)]
    return profits

  # Example list of total sales and total cost
salesList = [800, 100, 1500, 2500]
costList = [600, 1100, 1200, 2100]

  # Calculate profit for each pair of sales and cost
profits = calcProfit(salesList, costList)

# Display the results
for i, profit in enumerate(profits):
  print(f"Profit/Loss for sale {i + 1}: ${profit}")

"""4. Calculate Tips for a Shift: from sales data for a specific shift, workers get tipped for the shift (2% of shift sales)."""

def calcShiftTips():
  while True:
    try:
      shiftSales = float(input("Shift Total Sales: $"))
      tipsPercentage = 0.02

      # Calculate tips for the shift
      tips = shiftSales * tipsPercentage
      print(f"Tips for the Shift: ${tips}")
      break
    except:
      # if user doesn't input the required data type
        print("Oops!  That was not a valid number.  Try again...")

calcShiftTips()

"""5. Calculate Total Tips for the Day: with sales data for morning and evening shifts, return total tips for the day (sum of tips from both shifts)."""

def calcTotalTips():
  while True:
    try:
      tipsPercentage = 0.02  # 2% tip rate

      # Sales List for morning and evening shifts
      morningShiftSales = float(input("Morning Shift Total Sales: $"))
      eveningShiftSales = float(input("Evening Shift Total Sales: $"))

      # calculate tips for each shift
      morningShiftTips = (morningShiftSales) * tipsPercentage
      eveningShiftTips = (eveningShiftSales) * tipsPercentage

      # calculate Total Tips for the day
      totalTips = morningShiftTips + eveningShiftTips

      # Display the results
      print(f"Total Tips for the Day: ${totalTips}")
      break
    except:
      # if user doesn't input the required data type
        print("Oops!  That was not a valid number.  Try again...")

calcTotalTips()

runAutomation()

